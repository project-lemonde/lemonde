import type { InspectorContent } from "../../types";

export const MaterialInspector: readonly InspectorContent[] = [
    {
        name: "allowShadowHotSwapping",
        label: "Allow Shadow Hot Swapping",
        type: "boolean",
        default: true,
        category: "Advanced",
        description: `Gets or sets a boolean indicating that the material is allowed (if supported) to do shader hot swapping.
            This means that the material can keep using a previous shader while a new one is being compiled.
            This is mostly used when shader parallel compilation is supported (true by default)`,
    },
    {
        name: "id",
        label: "ID",
        type: "text",
        default: "",
        category: "Generic",
        description: "The ID of the material",
    },
    {
        name: "name",
        label: "Name",
        type: "text",
        default: "",
        category: "Generic",
        description: "The name of the material",
    },
    {
        name: "checkReadyOnEveryCall",
        label: "Check Ready On Every Call",
        type: "boolean",
        default: false,
        category: "Advanced",
        description: "Specifies if the ready state should be checked on each call",
    },
    {
        name: "checkReadyOnlyOnce",
        label: "Check Ready Only Once",
        type: "boolean",
        default: false,
        category: "Advanced",
        description: "Specifies if the ready state should be checked once",
    },
    {
        name: "alpha",
        label: "Alpha",
        type: "number",
        default: 1.0,
        category: "Generic",
        description: "The alpha value of the material",
    },
    {
        name: "backFaceCulling",
        label: "Back Face Culling",
        type: "boolean",
        default: true,
        category: "Generic",
        description: "Sets the culling state (true to enable culling, false to disable)",
    },
    {
        name: "cullBackFaces",
        label: "Cull Back Faces",
        type: "boolean",
        default: true,
        category: "Generic",
        description: "Sets the type of faces that should be culled (true for back faces, false for front faces)",
    },
    {
        name: "blockDirtyMechanism",
        label: "Block Dirty Mechanism",
        type: "boolean",
        default: false,
        category: "Advanced",
        description: `Block the dirty-mechanism for this specific material
            When set to false after being true the material will be marked as dirty.`,
    },
    {
        name: "sideOrientation",
        label: "Side Orientation",
        type: "number",
        default: null,
        category: "Advanced",
        description: "Stores the value for side orientation",
    },
    {
        name: "onDisposeObservable",
        label: "Dispose",
        type: "reference",
        referenceType: "Observable<Material>",
        category: "Events",
        description: "Observable raised when the material is disposed",
    },
    {
        name: "onBindObservable",
        label: "Bind",
        type: "reference",
        referenceType: "Observable<AbstractMesh>",
        category: "Events",
        description: "Observable raised when the material is bound",
    },
    {
        name: "onUnBindObservable",
        label: "Unbind",
        type: "reference",
        referenceType: "Observable<Material>",
        category: "Events",
        description: "Observable raised when the material is unbound",
    },
    {
        name: "onEffectCreatedObservable",
        label: "Effect Created",
        type: "reference",
        referenceType: "Observable<any>", // { effect: Effect, subMesh: Nullable<SubMesh> }
        category: "Events",
        description: "Observable raised when the effect is (re)created",
    },
    {
        name: "alphaMode",
        label: "Alpha Mode",
        type: "enum",
        default: 2,
        category: "Generic",
        description: "The alpha mode of the material",
        enum: [
            {
                label: "Disable",
                value: 0,
                description: "Defines that alpha blending is disabled",
            },
            {
                label: "Add",
                value: 1,
                description: "Defines that alpha blending is SRC ALPHA * SRC + DEST",
            },
            {
                label: "Combine",
                value: 2,
                description: "Defines that alpha blending is SRC ALPHA * SRC + (1 - SRC ALPHA) * DEST",
            },
            {
                label: "Subtract",
                value: 3,
                description: "Defines that alpha blending is DEST - SRC * DEST",
            },
            {
                label: "Multiply",
                value: 4,
                description: "Defines that alpha blending is SRC * DEST",
            },
            {
                label: "Maximized",
                value: 5,
                description: "Defines that alpha blending is SRC ALPHA * SRC + (1 - SRC) * DEST",
            },
            {
                label: "One One",
                value: 6,
                description: "Defines that alpha blending is SRC + DEST",
            },
            {
                label: "Premultiplied",
                value: 7,
                description: "Defines that alpha blending is SRC + (1 - SRC ALPHA) * DEST",
            },
            {
                label: "Premultiplied PorterDuff",
                value: 8,
                description: "Defines that alpha blending is SRC + (1 - SRC ALPHA) * DEST Alpha will be set to (1 - SRC ALPHA) * DEST ALPHA",
            },
            {
                label: "Interpolate",
                value: 9,
                description: "Defines that alpha blending is CST * SRC + (1 - CST) * DEST",
            },
            {
                label: "Screen Mode",
                value: 10,
                description: "Defines that alpha blending is SRC + (1 - SRC) * DEST Alpha will be set to SRC ALPHA + (1 - SRC ALPHA) * DEST ALPHA",
            },
            {
                label: "One One One One",
                value: 11,
                description: "Defines that alpha blending is SRC + DST Alpha will be set to SRC ALPHA + DST ALPHA",
            },
            {
                label: "Alpha To Color",
                value: 12,
                description: "Defines that alpha blending is SRC * DST ALPHA + DST Alpha will be set to 0",
            },
            {
                label: "Reverse One Minus",
                value: 13,
                description: "Defines that alpha blending is SRC * (1 - DST) + DST * (1 - SRC)",
            },
            {
                label: "Src Dst One Minus Src Alpha",
                value: 14,
                description: "Defines that alpha blending is SRC + DST * (1 - SRC ALPHA) Alpha will be set to SRC ALPHA + DST ALPHA * (1 - SRC ALPHA)",
            },
            {
                label: "One One One Zero",
                value: 15,
                description: "Defines that alpha blending is SRC + DST * (1 - SRC ALPHA) Alpha will be set to SRC ALPHA",
            },
            {
                label: "Exclusion",
                value: 16,
                description: "Defines that alpha blending is SRC * DST ALPHA + DST Alpha will be set to DST ALPHA",
            },
            {
                label: "Layer Accumulate",
                value: 17,
                description: "Defines that alpha blending is SRC * SRC ALPHA + DST * (1 - SRC ALPHA) Alpha will be set to SRC ALPHA + (1 - SRC ALPHA) * DST ALPHA",
            },
        ],
    },
    {
        name: "needDepthPrePass",
        label: "Need Depth Pre Pass",
        type: "boolean",
        default: false,
        category: "Generic",
        description: "Sets the need depth pre-pass value",
    },
    {
        name: "disableDepthWrite",
        label: "Disable Depth Write",
        type: "boolean",
        default: false,
        category: "Generic",
        description: "Specifies if depth writing should be disabled",
    },
    {
        name: "disableColorWrite",
        label: "Disable Color Write",
        type: "boolean",
        default: false,
        category: "Generic",
        description: "Specifies if color writing should be disabled",
    },
    {
        name: "forceDepthWrite",
        label: "Force Depth Write",
        type: "boolean",
        default: false,
        category: "Generic",
        description: "Specifies if depth writing should be forced",
    },
    {
        name: "depthFunction",
        label: "Depth Function",
        type: "number",
        default: 0,
        category: "Advanced",
        description: "Specifies the depth function that should be used. 0 means the default engine function",
    },
    {
        name: "separateCullingPass",
        label: "Separate Culling Pass",
        type: "boolean",
        default: false,
        category: "Generic",
        description: "Specifies if there should be a separate pass for culling",
    },
    {
        name: "fogEnabled",
        label: "Fog Enabled",
        type: "boolean",
        default: true,
        category: "Generic",
        description: "Specifies if fog should be enabled",
    },
    {
        name: "pointSize",
        label: "Point Size",
        type: "number",
        default: 1.0,
        category: "Generic",
        description: "Specifies the point size",
    },
    {
        name: "zOffset",
        label: "Z Offset",
        type: "number",
        default: 0,
        category: "Generic",
        description: "Specifies the z offset",
    },
    {
        name: "zOffsetUnits",
        label: "Z Offset Units",
        type: "number",
        default: 0,
        category: "Generic",
        description: "Specifies the z offset units",
    },
    {
        name: "wireframe",
        label: "Wireframe",
        type: "boolean",
        default: false,
        category: "Debug",
        description: "Specifies if wireframe should be enabled",
    },
    {
        name: "pointsCloud",
        label: "Points Cloud",
        type: "boolean",
        default: false,
        category: "Debug",
        description: "Specifies if points cloud should be enabled",
    },
    {
        name: "fillMode",
        label: "Fill Mode",
        type: "enum",
        default: 0,
        category: "Generic",
        description: "Sets the material fill mode",
        enum: [
            {
                label: "Triangle Fill Mode",
                value: 0,
                description: "Triangle fill mode",
            },
            {
                label: "Wireframe Fill Mode",
                value: 1,
                description: "Wireframe mode",
            },
            {
                label: "Point Fill Mode",
                value: 2,
                description: "Point fill mode",
            },
            {
                label: "Point List Draw Mode",
                value: 3,
                description: "Point list draw mode",
            },
            {
                label: "Line List Draw Mode",
                value: 4,
                description: "Line list draw mode",
            },
            {
                label: "Line Loop Draw Mode",
                value: 5,
                description: "Line loop draw mode",
            },
            {
                label: "Line Strip Draw Mode",
                value: 6,
                description: "Line strip draw mode",
            },
            {
                label: "Triangle Strip Draw Mode",
                value: 7,
                description: "Triangle strip draw mode",
            },
            {
                label: "Triangle Fan Draw Mode",
                value: 8,
                description: "Triangle fan draw mode",
            },
        ],
    },
    // TODO: stencil
    {
        name: "useLogarithmicDepth",
        label: "Use Logarithmic Depth",
        type: "boolean",
        default: false,
        category: "Generic",
        description: `In case the depth buffer does not allow enough depth precision for your scene (might be the case in large scenes)
            You can try switching to logarithmic depth.`,
        link: "https://doc.babylonjs.com/features/featuresDeepDive/materials/advanced/logarithmicDepthBuffer",
    },
    {
        name: "transparencyMode",
        label: "Transparency Mode",
        type: "enum",
        default: null,
        category: "Generic",
        description: "The transparency mode of the material",
        enum: [
            {
                label: "Opaque",
                value: 0,
            },
            {
                label: "Alpha Test",
                value: 1,
            },
            {
                label: "Alpha Blend",
                value: 2,
            },
            {
                label: "Alpha Test And Blend",
                value: 3,
            },
        ],
    },
    {
        name: "plugins",
        label: "Plugins",
        type: "reference",
        referenceType: "MaterialPlugin[]",
        category: "Advanced",
        description: "The material plugins",
    },
];
